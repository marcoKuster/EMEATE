public with sharing class QA_TEDetailTCSectionController {      Id id;      String tcNumber;      String briefDescription;      String hierarchy;      String tcOrder;      String owner;      String ownerId;      String priority;      String executionType;      String ftestId;      String expectedResults {get; set;}      String longDescription {get; set; }      public String getTcNumber() { return tcNumber; }      public String getBriefDescription() { return briefDescription; }      public String getHierarchy() { return hierarchy; }      public String getTcOrder() { return tcOrder; }      public String getOwner() { return owner; }      public String getPriority() { return priority; }      public String getExecutionType() { return executionType; }      public String getFtestId() { return ftestid; }      public String getOwnerId() { return ownerId; }      public String getExpectedResults() { return expectedResults; }      public String getlongDescription() { return longDescription; }      public QA_TEDetailTCSectionController (ApexPages.StandardController stdController) {            try {                  id = stdController.getId();            } catch (Exception e) {                  ApexPages.Message myMsg = new ApexPages.message(ApexPages.Severity.ERROR, 'Error: ' + e.getMessage());                  ApexPages.AddMessage(myMsg);            }      }      public String getFindTestCase() {            QA_Test_Execution__c te = [select Test_Case__r.Name, Test_Case__r.Brief_Description__c, Test_Case__r.Hierarchy__c, Test_Case__r.Order__c, Test_Case__r.Expected_Results__c, Test_Case__r.OwnerId, Test_Case__r.Priority__c, Test_Case__r.Execution_Type__c, Test_Case__r.Ftest_Id__c, Test_Case__r.Steps_to_Reproduce__c from QA_Test_Execution__c where Id = :id];            tcNumber = te.Test_Case__r.Name;            briefDescription = te.Test_Case__r.Brief_Description__c;            hierarchy = te.Test_Case__r.Hierarchy__c;            tcOrder = String.valueOf(te.Test_Case__r.Order__c);            owner = te.Test_Case__r.OwnerId;            ownerId = owner;            User ownerUser = [select FirstName, LastName from User where Id = :owner];            owner = ownerUser.FirstName + ' ' + ownerUser.LastName;            priority = te.Test_Case__r.Priority__c;            executionType = te.Test_Case__r.Execution_Type__c;            ftestId = te.Test_Case__r.Ftest_Id__c;            expectedResults = te.Test_Case__r.Expected_Results__c;            longDescription = te.Test_Case__r.Steps_to_Reproduce__c;            return null;      }    private static ADM_Work__c createUS(String name){        ADM_Work__c newUS = ADM_Work.createTestWork('User Story');        return newUS;    }    private static QA_Hierarchy__c createBaseHiers(String path){        String[] pathArr = path.split('[.]');        QA_Hierarchy__c newHier = new QA_Hierarchy__c(Name = pathArr[pathArr.size()-1], Depth__c = pathArr.size()-1, Count__c = 0, Full_Path__c = path);        insert(newHier);        return newHier;    }    public static QA_Test_Execution__c createTE(ADM_Work__c us, QA_Test_Case__c tc) {        String userId = UserInfo.getUserId();        QA_Test_Execution__c te = new QA_Test_Execution__c(User_Story__c = us.Id, Test_Case__c = tc.Id, Assignee__c = userId, Number_of_Executions__c = 0, Status__c = 'Planned');        insert(te);        return te;    }    /**    * @testcaseID a0B20000009gZvREAU    * @userStory a07B0000000DfNp    * @hierarchy GUS.QaforceToGUS.Test Execution.Test Execution Detail    * @expected Results The following fields show on the Test Execution Detail section:     * Type (picklist), User Story (link), Test Case (link), Number of Executions (Number Field),     * Estimate Hrs to complete (Text Field), Ftest ID (Text Field), Bugs (Text Field), Assignee (picklist),     * Execution Type (picklist), Status, date of last execution, Hours Spent Executing, Build# of Last Execution, comments, Test Execution Number    */    public static testmethod void testTestCaseSection() {        ApexPages.standardController control = new ApexPages.standardController(new QA_Test_Execution__c());        QA_TEDetailTCSectionController testObj = new QA_TEDetailTCSectionController(control);        QA_Hierarchy__c baseHier = createBaseHiers('TCSection_BaseHier');        ADM_Work__c us = createUS('userStory1');        String userId = UserInfo.getUserId();        QA_Test_Case__c tc = new QA_Test_Case__c();        tc.Brief_Description__c = 'briefDescription1';        tc.Hierarchy__c = baseHier.Name + '.branch 1';        tc.OwnerId = userId;        tc.Priority__c = 'Medium';        tc.Execution_Type__c = 'Automated';        tc.FTest_Id__c = 'ftestId';        insert(tc);        QA_Test_Execution__c te = createTE(us, tc);        testObj.Id = te.id;        testObj.getFindTestCase();        System.assertEquals(testObj.getBriefDescription(), 'briefDescription1');        System.assertEquals(testObj.getHierarchy(), 'TCSection_BaseHier.branch 1');        System.assertEquals(testObj.getPriority(), 'Medium');        System.assertEquals(testObj.getExecutionType(), 'Automated');        System.assertEquals(testObj.getFtestId(), 'ftestId');        System.assertEquals(testObj.getOwner(), UserInfo.getFirstName() + ' ' + UserInfo.getLastName());    }}