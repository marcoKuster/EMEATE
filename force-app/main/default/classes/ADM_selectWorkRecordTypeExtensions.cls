public with sharing class ADM_selectWorkRecordTypeExtensions {    public String recordType;        public Map<String, String> params = new Map<String, String>();    public Boolean hasParentOrChildId { get; set; }    private static final String child = 'Child_ID__c';    private static final String parent = 'Parent_ID__c';      public ADM_selectWorkRecordTypeExtensions(ApexPages.StandardController controller) {         //preserve current parameters so fields on the new work screen can be autopopulated        params.putAll(System.currentPageReference().getParameters());        if(params.containsKey(child) || params.containsKey(parent)) {            hasParentOrChildId = true;        } else {            hasParentOrChildId = false;        }    }            public List<RecordType> getRecordTypes(){        String sobjectTypeName = ADM_ConstantsSingleton.getInstance().getNameSpace() + 'ADM_Work__c';        List<String> columnValues = new List<String>{sobjectTypeName};        List<RecordType> recordTypes = ADM_RecordType.getAllBy('SobjectType', columnValues);        for(Integer i = recordTypes.size() - 1; i >= 0; i--) {            if(recordTypes.get(i).Name.equalsIgnoreCase('template')) {                recordTypes.remove(i);              }        }        return recordTypes;    }          public List<SelectOption> getRecordTypeOptions() {                  List<SelectOption> options = new List<SelectOption>();                  List<RecordType> els = getRecordTypes();        for(RecordType el : els) {            options.add(new SelectOption(el.Id,el.Name));        }                return options;    }          public String getRecordType() {        return recordType;    }      public void setRecordType(String s) {         this.recordType = s;     }            public PageReference gotoWorkEdit(){        PageReference pr = null;        RecordType currentRecordType = ADM_RecordType.getById(recordType);        if(currentRecordType != null) {            pr = ADM_Work.getWorkCreateEditPage(UserInfo.getUserId(), currentRecordType);            //preserve current parameters            Map<String,String> modedParams = this.params;            if ( params != null ) {                for(String key : modedParams.keySet()) {                                        if(modedParams.get(key) != null) {                        modedParams.put(key, EncodingUtil.urlEncode( modedParams.get(key), 'UTF-8' ));                    }                }            }            pr.getParameters().putAll(modedParams);                        pr.getParameters().put('RecordType',recordType);            pr.getParameters().put('retUrl','/apex/adm_selectWorkRecordType');            pr.setRedirect(true);         }                 return pr;          }    }