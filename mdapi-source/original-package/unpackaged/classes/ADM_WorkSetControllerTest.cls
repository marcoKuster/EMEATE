/** * This class contains unit tests for validating the behavior of Apex classes * and triggers. * * Unit tests are class methods that verify whether a particular piece * of code is working properly. Unit test methods take no arguments, * commit no data to the database, and are flagged with the testMethod * keyword in the method definition. * * All test methods in an organization are executed whenever Apex code is deployed * to a production organization to confirm correctness, ensure code * coverage, and prevent regressions. All Apex classes are * required to have at least 75% code coverage in order to be deployed * to a production organization. In addition, all triggers must have some code coverage. *  * The @isTest class annotation indicates this class only contains test * methods. Classes defined with the @isTest annotation do not count against * the organization size limit for all Apex scripts. * * See the Apex Language Reference for more information about Testing and Code Coverage. */@isTestprivate class ADM_WorkSetControllerTest {    static testMethod void testWithURL() {        ADM_Work__c work = ADM_Work.createTestWork();        List<ADM_Work__c> works = new List<ADM_Work__c>();        works.add(work);                System.currentPageReference().getParameters().put('workIds', work.id);                Apexpages.Standardsetcontroller controller = new Apexpages.Standardsetcontroller(works);                ADM_WorkSetController wsc = new ADM_WorkSetController(controller);                System.assert(wsc.selected != null);        System.assert(wsc.notecard != null);    }    static testMethod void testWithSelected() {        ADM_Work__c work = ADM_Work.createTestWork();        ADM_Work__c story = ADM_Work.createTestWork(ADM_Work.RECORD_TYPE_NAME_USERSTORY);                List<ADM_Work__c> works = new List<ADM_Work__c>();        works.add(work);        works.add(story);                System.currentPageReference().getParameters().put('workIds', work.id);                Apexpages.Standardsetcontroller controller = new Apexpages.Standardsetcontroller(works);        controller.setSelected(works);                ADM_WorkSetController wsc = new ADM_WorkSetController(controller);                System.assert(wsc.selected != null);        System.assert(wsc.notecard != null);    }    static testMethod void testWithSelectedPopulatedStory() {        ADM_Work__c work = ADM_Work.createTestWork();        ADM_Work__c story = ADM_Work.createTestWork(ADM_Work.RECORD_TYPE_NAME_USERSTORY);        story.User_Type__c = 'user type';        story.Description__c = 'test descripton';                update story;                List<ADM_Work__c> works = new List<ADM_Work__c>();        works.add(work);        works.add(story);                Apexpages.Standardsetcontroller controller = new Apexpages.Standardsetcontroller(works);        controller.setSelected(works);                ADM_WorkSetController wsc = new ADM_WorkSetController(controller);                System.assert(wsc.selected != null);        System.assert(wsc.notecard != null);    }    static testMethod void testWithoutSelected() {        ADM_Work__c work = ADM_Work.createTestWork();        ADM_Work__c story = ADM_Work.createTestWork(ADM_Work.RECORD_TYPE_NAME_USERSTORY);                List<ADM_Work__c> works = new List<ADM_Work__c>();        works.add(work);        works.add(story);                Apexpages.Standardsetcontroller controller = new Apexpages.Standardsetcontroller(works);                ADM_WorkSetController wsc = new ADM_WorkSetController(controller);                System.assert(wsc.selected.isEmpty() == true);        System.assert(wsc.notecard == null);    }}