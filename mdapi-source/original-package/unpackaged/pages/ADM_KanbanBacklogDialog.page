<apex:page id="kanbanBacklogDialog" sidebar="false" controller="ADM_KanbanBoardController" standardstylesheets="false">
<style>
	#backlogFilterSearch{display:inline-block;}
</style>
<div id="backlogDialog" class="ui-dialog">
		<div id="backlogDialogLoading">
			<div class="fa fa-refresh fa-spin"></div>
		</div>
		
		<div id="backlogDialogHeader">
			<ul class="sTabs">
				<li id="tabBacklog" class="on"><a href="#">Backlog</a></li>
				<li id="tabRecent"><a href="#">Recent</a></li>
			</ul>
			
			<div class="ui-dialog-error"></div>
	
				<div class="backlogFilterSearchContainer">
				Select column to add work to:
				<select id="backlogColumnSelect"></select>
				
				<span class="textSpan">Type word to filter work:</span>
				<input id="backlogFilterSearch" type="text" name="text" value="" autocomplete="off" onkeyup="updateFilterForImport();" />
				</div>
			

		</div>


		<div class="workList" id="backlogDialogWorkList">
		text
		</div>
		<div class="workList" id="backlogDialogRecentWorkList" style="display:none;"></div>
</div>


<script id="backlog-dialog-worklist-template" type="text/x-handlebars-template">
	<div class="backlogRow backlog-workId-{{ workId }} backlog-sprint-{{ sprint }}">
		<div class="backlogCheckbox"><input type="checkbox" name="workList" id="work-{{ id }}" value="{{ id }}" /></div>
		<div class="backlogWorkId"><label for="work-{{ id }}"><a href="/{{ id }}" target="_blank">{{ workId }}</a></label></div>
		<div class="backlogRecordType"><label for="work-{{ id }}">{{ recordType }}</label></div>
		<div class="backlogSubject"><label for="work-{{ id }}">{{ workSubject }}</label></div>
		<div class="backlogSprint"><label for="work-{{ id }}">{{ sprint }}</label></div>
		<div class="backlogEpic"><label for="work-{{ id }}">{{ epic }}</label></div>
		<div class="backlogBuild"><label for="work-{{ id }}">{{ build }}</label></div>
	</div>
</script>

<script>
var backlogWorkListTemplate = Handlebars.compile($("#backlog-dialog-worklist-template").html());

function displayBacklogDialogError(message) {
	if (message == null) {
		$('#backlogDialog .ui-dialog-error').html(null).hide();
	} else {
		$('#backlogDialog .ui-dialog-error').html('Transaction rolled back: ' + trimErrorMessage(message)).show();
	}
}

function updateFilterForImport() {
	console.log('Inside update');
	var text = $('#backlogFilterSearch').val();
	console.log(text);
	$('.backlogRow').hide();
	var className = '';
	
	// Search:
	if ($('#backlogFilterSearch').val().length > 0) {
		console.log('Filter search');
		console.log($('#backlogFilterSearch').val());
		className += '.backlogRow:icontains("' + $('#backlogFilterSearch').val() + '")'
	}

	if (className.length === 0) {
		$('.backlogRow').show();
	}
	else {
		$('.backlogRowHeader').show();
		$(className).show();
	}
		

}	

jQuery.expr[":"].icontains = jQuery.expr.createPseudo(function (arg) {                                                                                                                                                                
    return function (elem) {                                                            
        return jQuery(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;        
    };                                                                                  
});

function showBox(box,tab) {
	$('#backlogDialogHeader > ul.sTabs > li').removeClass('on');
	$(tab).closest('li').addClass('on');
	$('.workList').hide();
	$(box).appendTo('#backlogDialog').show();
	$('.workList:hidden').appendTo('#backlogDialog');
	$('.workList input[type=checkbox]').prop('checked',false);
}

function resizeBacklogDialog() {
	if ($('#backlogDialog').is(':visible')) {
		$('#backlogDialog').height($(window).height() - 175).dialog("option", "position", {my: "center", at: "center", of: window});
	    $('#backlogDialog .workList').css('height', ($('#backlogDialog').height() - $('#backlogDialogHeader').outerHeight(true) - 10) + 'px');
	}
}

function loadBacklogDialog() {
	$('#backlogDialog').addClass('dialogloading');
    showBox('#backlogDialogWorkList','#tabBacklog a'); // set tab default back to Backlog
    $('#backlogSaveButton').hide();
	$('#backlogDialog').find('select').empty();
    //$('#backlogDialog .workList').html('<div class="spacer"></div>');
    $('#backlogDialog .workList').html('<div class="spacer"></div><div class="backlogRow backlogRowHeader"><div class="backlogCheckbox">SELECT</div><div class="backlogWorkId">WORK ID</div><div class="backlogRecordType">RECORD TYPE</div><div class="backlogSubject">SUBJECT</div><div class="backlogSprint">SPRINT</div><div class="backlogEpic">EPIC</div><div class="backlogBuild">BUILD</div></div>');

   // $('#backlogDialog .workList').html('<div class="spacer"></div><div class="spacer"></div>');
    displayBacklogDialogError(null);
	resizeBacklogDialog();
    var backLogCount = 100;
    var newWorkCount = 100;
	Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.ADM_KanbanBoardController.getNewAndBacklogWorks}', '{!teamId}', backLogCount, newWorkCount, function(result, event) {
		if (event.status) {
			$(backlogDialog).removeClass('dialogloading');
			console.log(result);
			
			// backlog
			if (result.backLogWorks.length > 0) {
				$.each(result.backLogWorks, function(index, value) {
					var epicval = value[nameSpace + 'Epic_Name__c'];
					if(value[nameSpace + 'Epic_Name__c']==null)
						value[nameSpace + 'Epic_Name__c'] = '-';
					if(value[nameSpace + 'Sprint_Name__c']==null)
						value[nameSpace + 'Sprint_Name__c'] = '-';
					if(value[nameSpace + 'Scheduled_Build_Name__c']==null)
						value[nameSpace + 'Scheduled_Build_Name__c'] = '-';
					console.log('Value epic : ', value[nameSpace + 'Epic_Name__c']);
					$('#backlogDialogWorkList').append(backlogWorkListTemplate({
		                id:value.Id,
		                workId:value.Name,
		                workSubject:value[nameSpace + 'Subject__c'],
		                recordType:value.RecordType.Name,
		                sprint:value[nameSpace + 'Sprint_Name__c'],
		                epic:value[nameSpace + 'Epic_Name__c'],
		                build:value[nameSpace + 'Scheduled_Build_Name__c'],
					}));
				});
			} else {
				$('#backlogDialogWorkList .spacer').html('<br/>No results found');
			}
			
			// recent
			if (result.recentNewWorks.length > 0) {
				$.each(result.recentNewWorks, function(index, value) {
					if(value[nameSpace + 'Epic_Name__c']==null)
						value[nameSpace + 'Epic_Name__c'] = '-';
					if(value[nameSpace + 'Sprint_Name__c']==null)
						value[nameSpace + 'Sprint_Name__c'] = '-';
					if(value[nameSpace + 'Scheduled_Build_Name__c']==null)
						value[nameSpace + 'Scheduled_Build_Name__c'] = '-';
					$('#backlogDialogRecentWorkList').append(backlogWorkListTemplate({
		                id:value.Id,
		                workId:value.Name,
		                workSubject:value[nameSpace + 'Subject__c'],
		                recordType:value.RecordType.Name,
		                sprint:value[nameSpace + 'Sprint_Name__c'],
		                epic:value[nameSpace + 'Epic_Name__c'],
		                build:value[nameSpace + 'Scheduled_Build_Name__c'],
					}));
				});
			} else {
				$('#backlogDialogRecentWorkList .spacer').html('<br/>No results found');
			}
			
			if (result && result.leafNodeDetails && result.leafNodeDetails.length > 0) {
            	$.each(result.leafNodeDetails, function(index, leafNode) {
					if(!leafNode.isClosedColumn){
						$('#backlogDialog select').append('<option value="' + leafNode.columnId + '">' + leafNode.path + '</option>');
					}
				});
				
            }

		} else if (event.type === 'exception') {
			//Fetch exception
		}
	}, {escape:false});
}

$(function() {

	backlogDialog = $("#backlogDialog").dialog({
        autoOpen: false,
        resizable: false,
        width:750,
        height:$(window).height() - 100,
        modal: true,
        title: "Backlog",
        buttons: {
            "Save": {
	            text: "Import",
	            id: "backlogSaveButton",
	            click: function() {
	            	console.log('Import clicked');
					$(this).addClass('dialogloading');
			        displayBacklogDialogError(null);
					//resizeBacklogDialog();

					$('button#backlogSaveButton,button#backlogCloseButton').attr('disabled','disabled')
					$('button#backlogSaveButton span').text('Importing...');
					
					var works = [];
					$('.workList input[type=checkbox]:checked').each(function(index) {
						works.push({
							Id: $(this).val(),
							Column__c: $('#backlogColumnSelect').val(),
							Origin__c:'Kanban_Import'
						});
					});
					
					console.log(works);					

					if (works.length > 0) {
			            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.ADM_KanbanBoardController.saveWorks}', works, true, function(result, event) {
			                if (event.status) {
			                    console.log('Save good!');
			                    backlogDialog.removeClass('dialogloading').dialog('close');

			                    $('button#backlogSaveButton,button#backlogCloseButton').removeAttr('disabled');
								$('button#backlogSaveButton span').text('Import');
						        refreshBoard();

			                } else if (event.type === 'exception') {
				                console.warn('Error during save, reverting move.');
				                //errorDialog.html(trimErrorMessage(event.message)).dialog({ title: "Error During Save" }).dialog("open");
				                displayBacklogDialogError(event.message);
				                resizeBacklogDialog();
				                
			                    backlogDialog.removeClass('dialogloading');
			                    $('button#backlogSaveButton,button#backlogCloseButton').removeAttr('disabled');
								$('button#backlogSaveButton span').text('Import');
							}
						});
					} else {
	                    backlogDialog.removeClass('dialogloading');
	                    $('button#backlogSaveButton,button#backlogCloseButton').removeAttr('disabled');
						$('button#backlogSaveButton span').text('Import');
					}
	            	
				}
            },
            "Close": {
	            text: "Close",
	            id: "backlogCloseButton",
	            click: function () {
	                backlogDialog.dialog("close");
	            }
            }
        },
        open: function(event, ui) {
			loadBacklogDialog();
        }
    });

	$(document).on('click','#backlogDialog .backlogRow a', function(e) {
		e.preventDefault();
	    selectedWork = $(this).attr('href').replace('/','');
	    if (e.shiftKey) {
			window.open('/' + selectedWork)
		} else {
		    workDialog.dialog("open");
		}
    });

    $("#buttonBacklog").on("click", function() {
	   backlogDialog.dialog("open");
    });

	$(document).on('click','#tabBacklog a', function(e) {
		showBox('#backlogDialogWorkList',this);
		return false;
    });

	$(document).on('click','#tabRecent a', function(e) {
		showBox('#backlogDialogRecentWorkList',this);
		return false;
    });

	$(document).on('click','.workList input[type=checkbox]', function(e) {
		if ( $('.workList input[type=checkbox]:checked').length > 0) {
			$('#backlogSaveButton').show();
		} else {
			$('#backlogSaveButton').hide();
		}
    });
    

});
</script>

</apex:page>